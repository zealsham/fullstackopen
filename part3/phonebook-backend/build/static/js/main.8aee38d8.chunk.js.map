{"version":3,"sources":["components/Form.js","services/phonehttp.js","components/Person.js","components/Error.js","components/Phonebook.js","components/Search.js","components/Success.js","App.js","index.js"],"names":["Form","onSubmit","newName","handleNewName","handlePhone","phone","value","onChange","type","baseUrl","axios","get","then","response","data","id","delete","phoneObject","post","put","Person","deleteEntry","name","number","onClick","ErrorNot","message","className","Phonebook","phonelist","stateChanger","VerrorOccuring","useState","errorOccured","setErrorOccured","Error","map","person","window","confirm","personService","newphonebook","filter","entry","catch","error","setInterval","note","Search","searchState","Success","App","persons","setPersons","setNewName","setPhone","search","setSearch","succefulOperation","setSuccesfulOperation","validateError","setValidateError","useEffect","phoneService","obj","toLowerCase","includes","dataToshow","length","event","console","log","target","preventDefault","dupename","find","p","userid","updateobj","pers","setTimeout","msg","concat","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8aee38d8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form=({onSubmit,newName,handleNewName,handlePhone,phone})=>{\n  return (\n    <form onSubmit={onSubmit}>\n    <div>\n      <h1>Add a new</h1>\n      name: <input value={newName} onChange={handleNewName} /><br/>\n      phone: <input value={phone} onChange={handlePhone} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n\n}\n\nexport default Form","import axios from 'axios'\nconst baseUrl = '/api/persons'\nconst getAll =()=>{\n    const request = axios.get(baseUrl)\n    return request.then(response=>response.data)\n}\n\nconst deletePerson=(id)=>{\nconst request = axios.delete(`${baseUrl}/${id}`)\nreturn request.then(response=>response.data)\n}\n\nconst addPerson =(phoneObject)=>{\n    const request=axios.post(`${baseUrl}`,phoneObject)\n    return request.then(response=>response.data)\n\n}\n\nconst update =(phoneObject,id)=>{\n    const request = axios.put(`${baseUrl}/${id}`,phoneObject)\n    return request.then(response=>response.data)\n}\nexport default {\n    getAll:getAll,\n    deletePerson:deletePerson,\n    addPerson:addPerson,\n    update:update\n}","import React from 'react'\n\nconst Person=({data,deleteEntry})=>{\n    return (\n        \n        <p>{data.name}  {data.number}<button onClick={deleteEntry}>delete</button></p>\n    )\n}\n\nexport default Person","import React from 'react'\n\nconst ErrorNot=({message})=>{\n    if (message===null){\n        return null\n    }\n    return(\n        <div className=\"error\">\n                {message}\n        </div>\n    )\n}\nexport default ErrorNot","import react,{useState} from 'react'\nimport personService from '../services/phonehttp'\nimport Person from './Person'\nimport ErrorNot from './Error'\n\n\nconst Phonebook=({phonelist,stateChanger,VerrorOccuring})=>{\nconst [errorOccured,setErrorOccured] = useState(null)\n//statechanger updates the person list \nconst handleDelete=(id,name)=>{\n  if(window.confirm(`delete ${name}`)){\n  personService.deletePerson(id)\n  .then(response=>{\n    const newphonebook = phonelist.filter(entry=>entry.id !== id)\n    stateChanger(newphonebook)\n  })\n  .catch(error=>{\n    setErrorOccured(`${name} has already been deleted `)\n    setInterval(() => {\n      setErrorOccured(null)\n    }, 5000);\n  })\n  stateChanger(phonelist.filter(note=> note.id !== id))\n  }\n}\n    return(\n        <>\n        <ErrorNot message={errorOccured || VerrorOccuring} />\n        {phonelist.map(person=>{\n        return (\n\n          <Person data={person} key={person.id} deleteEntry={()=>handleDelete(person.id,person.name)}/>\n        )\n      })}\n        </>\n    )\n}\n\nexport default Phonebook","import react from 'react'\n\nconst Search=({searchState,onChange})=>{\n return (\n     <>\n      fillter shown with: <input value={searchState} onChange={onChange} />\n     </>\n )\n}\nexport default Search","import React from 'react'\n\nconst Success=({message})=>{\n    if(message===null){\n        return null\n    }\n    return (\n        <div className=\"success\">\n            {message}\n        </div>\n    )\n}\n\nexport default Success","import React, { useState,useEffect } from 'react'\nimport Form from './components/Form'\nimport Phonebook from './components/Phonebook'\nimport Search from './components/Search'\nimport phoneService from './services/phonehttp'\nimport Success from './components/Success'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('enter name to add')\n\n  const [phone , setPhone] = useState(\"enter phone number\")\n\n  const[search,setSearch] =  useState(\"\")\n\n  const [succefulOperation, setSuccesfulOperation] = useState(null)\n  const [validateError, setValidateError] = useState(null)\n\n  useEffect(()=>{\n    phoneService.getAll()\n    .then(response=>{\n      setPersons(response)\n    })\n  },[])\n\n  const formAction=(event)=>{\n    event.preventDefault()\n    const obj ={\n      name:newName,\n      number:phone\n    }\n    // prevent duplicate names,.\n    const dupename=persons.find(p=>p.name.toLowerCase() === newName.toLowerCase())\n    console.log(dupename)\n      /* \n      prevents adding of an existing name and number in the phone book \n      updates the number if the name is already in the phone book but number is different\n      */\n      if(dupename){\n        if (window.confirm(`${dupename.name} already exist in phone book , do you want to update the number`)){\n          let userid=dupename.id\n          const updateobj ={\n            name:dupename.name,\n            number:phone\n          }\n          phoneService.update(updateobj,userid)\n          .then(response=>{\n            setPersons(persons.map(pers=> pers.id !==userid ?pers : response))\n            setSuccesfulOperation(`${dupename.name} phone number has been updated`)\n            setTimeout(() => {\n              setSuccesfulOperation(null)\n            }, 6000);\n          }).catch(error=>{\n            setValidateError(error.response.data.msg)\n            setTimeout(() => {\n              setValidateError(null)\n            }, 3000);\n          })\n          return\n        }\n        return\n      }\n      else {\n  \n    phoneService.addPerson(obj)\n    .then(response=>{\n      setPersons(persons.concat(response))\n      setSuccesfulOperation(`${obj.name} has been added to the phonebook` )\n      setInterval(() => {\n        setSuccesfulOperation(null)\n      }, 7000);\n    }).catch(err=>{\n      console.log(err.response.data.msg)\n      setValidateError(err.response.data.msg)\n      setInterval(() => {\n        setValidateError(null)\n      },3000);\n      \n    })\n    setNewName('')\n  }\n}\n \n  const handleNewName =(event)=>{\n    event.preventDefault()\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handlePhone=(event)=>{\n    event.preventDefault()\n    setPhone(event.target.value)\n\n  }\n\n  const searchfunc =()=>{\n    if (search ===\"\"){\n      return []\n    }\n    const arr = persons.filter(obj=>{\n       return obj.name.toLowerCase().includes(search.toLowerCase())\n    })\n\n    return arr\n  }\n  let data=searchfunc()\n\n\n  const handleSearch=(event)=>{\n    console.log(event.target.value)\n    setSearch(event.target.value)\n  }\n\n  const dataToshow= data.length>=1?data:persons // if search query is entered show only that\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Success message={succefulOperation}></Success>\n\n       <Search  onChange={handleSearch} searchState={search} />\n       <Form onSubmit={formAction} newName={newName} handleNewName={handleNewName} handlePhone={handlePhone} phone={phone}/>\n      <h2>Numbers</h2>\n        <Phonebook phonelist={dataToshow} stateChanger={setPersons} VerrorOccuring={validateError}/>\n\n      \n    </div>\n  )\n}\n\nexport default Appn"," \nimport ReactDOM from 'react-dom';\nimport App from './App';\n \nReactDOM.render(\n  <App></App>, document.getElementById('root')\n)\n "],"sourceRoot":""}